> val updateHistory =
>    UpdateRecord("2024-06-20T11:05:00-04:00",Some("Document <code>iffy:type</code>, update documentation of <code>iffy:synthetic</code> as optionally including <code>iffy:type</code>."),Some("f19e4870e2c719f71d2f5024cb3e2e8f477622dc")) ::
>    UpdateRecord("2024-06-17T23:50:00-04:00",Some("Document <code>iffy:synthetic</code>."),Some("b8f2ae57694f9fb88b10df011f69ee9acfe4c0ac")) ::
>    UpdateRecord("2024-06-11T14:10:00-04:00",Some("Document <code>iffy:hint-announce</code>, <code>iffy:policy</code>, and <code>iffy:restriction</code>."),Some("6c5fef82527bd419e8e9c7e7f3a6420c9925cf10")) ::
>    UpdateRecord("2024-06-02T00:25:00-04:00",Some("Drop <code>iffy:timestamp</code>. We can just reuse <code>atom:updated</code> for the same work."),Some("199e44561de3fd9e731a335d8b2a655f42d9bc04")) ::
>    UpdateRecord("2024-06-01T21:35:00-04:00",Some("Add initial take on tags related to updates and revisions."),Some("72eaf9fdfebc9e627bff33bbe1102d4d250ad1d0")) ::
>    UpdateRecord("2024-05-25T23:00:00-04:00",Some("Add JS/CSS so that prior revisions are visually distinct from current."),Some("13de0232319ceab2f830591c318089d18cbec78d")) ::
>    UpdateRecord("2024-05-24T00:25:00-04:00",Some("Drop tags <code>iffy:when-updated</code> and <code>iffy:original-guid</code>, bad appraoch to updates."),Some("394986cb8d9c57f567d324e691a44d50102101ce")) ::
>    Nil
>
> val UntemplateAttributes = immutable.Map[String,Any] (
>   "Title"         -> "The 'iffy' XML namespace",
>   "PubDate"       -> "2024-05-13T04:10:00-04:00",
>   "Permalink"     -> "/xml/iffy/index.html",
>   "UpdateHistory" -> updateHistory,
>   "Sprout"        -> true,
>   "Anchor"        -> "iffy-xml-namespace"
> )

given PageBase = PageBase.fromPage(input.renderLocation)

(input : MainBlog.EntryInput)[]~()>      ### modify Title/Author/Pubdate above, add markdown or html below!

I want to do a lot of things with RSS that require
extensions of RSS (as the RSS spec [foresees](https://www.rssboard.org/rss-specification#extendingRss)).

The URL `http://tech.interfluidity.com/xml/iffy/` will mark an XML namespace in which some of these extensions will be defined.

The conventional prefix associated with this namespace will be `iffy`.

**The current version of this namespace is `v0.0.1-SNAPSHOT`.**

(`-SNAPSHOT` signifies that the version preceding that suffix has not yet been finalized. Much more to come!)

---
**Table of Contents**

* [`iffy:completeness`](#iffy-completeness)
* [`iffy:diff`](#iffy-diff)
* [`iffy:hint-announce`](#iffy-hint-announce)
* [`iffy:initial`](#iffy-initial)
* [`iffy:policy`](#iffy-policy)
* [`iffy:provenance`](#iffy-provenance)
* [`iffy:restriction`](#iffy-restriction)
* [`iffy:revision`](#iffy-revision)
* [`iffy:synthetic`](#iffy-synthetic)
* [`iffy:type`](#iffy-type)
* [`iffy:update`](#iffy-update)
* [`iffy:update-history`](#iffy-update-history)

---
<a id="iffy-completeness"></a>**Element &mdash; `iffy:completeness`**

<div class="iffy-element-desc">

**Solely a channel level element**

Contains one of the following four values:
1. `Ping`
2. `Metadata`
3. `Content`
4. `Media`

`iffy:completeness` describes the completeness that clients should expect of RSS [`item`](https://www.rssboard.org/rss-specification#hrelementsOfLtitemgt) elements.

* `Ping` makes the least commitment. Items need not include a [`guid`](https://www.rssboard.org/rss-specification#ltguidgtSubelementOfLtitemgt)
  element, or any elements at all beyond [RSS' requirement](https://www.rssboard.org/rss-specification#hrelementsOfLtitemgt) that at least one of `title` or `description` be present.
  RSS documents have completion `Ping` by default. Any or all items may meet the requirement for a higher completeness level, but no promises or commitment is made
  beyond the base specification.
* `Metadata` commits that each item MUST include a [`guid`](https://www.rssboard.org/rss-specification#ltguidgtSubelementOfLtitemgt) element,
  as well as meeting the base requirements for an RSS [`item`](https://www.rssboard.org/rss-specification#hrelementsOfLtitemgt).
* `Content` commits that each item, either inside its `description` tag, or via an extension such as `content:encoded`, includes the full
  content of the items it includes, suitable for independent rendering by any client capable also of resolving references to linked media
  externally. No limitation is placed on whether the full content is placed in a `description` element, in `content:encoded`, or in
  some other extension.
* `Media` augments `Content` by _embedding attachments to subsidiary media_ inside the RSS document. Subsidiary media does not include
  all potential links, just links which share a prefix with the current RSS document, which by default means all links subsidiary to the parent
  of the RSS document as specified in an [`atom:link`](https://datatracker.ietf.org/doc/html/rfc4287#section-4.2.7)

  _More information on this soon when `iffy:attachment` is defined_

The four values represent nested, hierarchical levels of commitment. `Ping` commits to nothing more than the spec
requires. `Media` makes every commitment promised by the prior three levels, and an additional one.

If not specified, no commitment is made, the feed should be considered `Ping`.

**Example:**
```xml
<?xml version='1.0' encoding='UTF-8'?>

<rss version="2.0" xmlns:iffy="http://tech.interfluidity.com/xml/iffy/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>tech â€” interfluidity</title>
    <atom:link type="application/rss+xml" rel="self" href="https://tech.interfluidity.com/feed/index.rss"/>
    <iffy:completeness>Content</iffy:completeness>
    <!-- Other channel elements -->
    <item>
      <!-- Other item elements -->
    </item>
  </channel>
</rss>

```

</div>

---

<a id="iffy-diff"></a>**Element &mdash; `iffy:diff`**

<div class="iffy-element-desc">

**When a subelement of [`iffy:update`](#iffy-update-history)**

MUST contain a URL, URI, or [IRI](https://datatracker.ietf.org/doc/html/rfc3987)
of a human-reviewable a [_diff_](https://en.wikipedia.org/wiki/Diff) of the current
updated and _the final minor revision_ of the update prior (or of the initially published post,
if the current update is the first declared update).

**Example**:
```xml
<iffy:diff>https://tech.interfluidity.com/xml/iffy/index-diff-394986cb8d9c57f567d324e691a44d50102101ce-to-13de0232319ceab2f830591c318089d18cbec78d.html</iffy:diff>
```

See also [`iffy:update-history` example](#iffy-update-history).

</div>

---

<a id="iffy-hint-announce"></a>**Element &mdash; `iffy:hint-announce`**

<div class="iffy-element-desc">

**When a subelement of `item`**

Represents a _hint_ to RSS consumers that "push" &mdash; announce, rebroadcast, or notify &mdash; items
whether this item should be so pushed. Consumers are free to ignore this hint or make use of it as they wish.

MUST contain an [`iffy:policy`](#iffy-policy) element, whose values MUST BE one of

* `Always` &mdash; the item should always be notified
* `Never` &mdash; the item should never be notified
* `Piggyback` &mdash; the item should be notified as part of digests or other announcements of multiple items, but should not constitute its own announcement.

MAY contain an [`iffy:restriction`](#iffy-restriction) element, which represents an application-specific restriction over the consumers
to which it is addressed. No restrictions are placed on the content of the `iffy:restriction` element. Applications can define restrictions as they see fit.

An `iffy:hint-announce` element with NO `iffy:restriction` or an empty `iffy:restriction` tag should be interpreted as the intended
default for ALL applications not addressed by an `iffy:hint-announce` with a more specific restriction.

Multiple `iffy:hint-announce` elements may be placed within a single `item`, provided that only one has an omitted or empty `iffy:restriction`,
and all `iffy:hint-announce` elements containing an `iffy:restriction` contain a unique restriction. Each `iffy:restriction` SHOULD apply to nonoverlapping
application-specific contexts. If that is not the case, how applications prioritize or respond to conflicting `iffy-hint-announce` elements whose restrictions
both apply must be determined by the application.

**Example**:
```xml
<iffy:hint-announce>
  <iffy:policy>Piggyback</iffy:policy>
</iffy:hint-announce>
```

</div>

---

<a id="iffy-initial"></a>**Element &mdash; `iffy:initial`**

<div class="iffy-element-desc">

**When a subelement of [`iffy:update-history`](#iffy-update-history)**

MAY contain a sequence of [`dc:creator`](https://www.rssboard.org/rss-profile#namespace-elements-dublin-creator)
elements, defining the initial authorship of an item, if authorship has changed. Since the containing `item` should always reflect
current authorship (that of the most recent revision), but no [`iffy:update`](#iffy-update) element is defined
for the initially published version, this container is required for completeness.

**Example**:
```xml
<iffy:initial>
  <!-- Perhaps more recent updates, and the current item, include more authors -->
  <dc:creator>First Author, Esq.</dc:creator>
</iffy:initial>
```

</div>

---

<a id="iffy-policy"></a>**Element &mdash; `iffy:policy`**

<div class="iffy-element-desc">

In general, represents a statement of some kind of policy with respect to its containing element,
suggested to feed consumers for handling a feed or item.

**When a subelement of [`iffy:hint-announce`](#iffy-hint-announce)**

Please see [`iffy:hint-announce`](#iffy-hint-announce).

</div>

---

<a id="iffy-provenance"></a>**Element &mdash; `iffy:provenance`**

<div class="iffy-element-desc">

**When an item level element**

If present in an item, the item contains a sequence of one or more [`atom:link`](https://datatracker.ietf.org/doc/html/rfc4287#section-4.2.7) elements,
each of whose
* `rel` attribute is MUST BE `via`
* `href` attribute MUST BE the URL of an RSS feed from which the base contents of this item were drawn
* `type` attribute SHOULD BE `application/rss+xml`

If the item from which the current item was sourced does not contain an `iffy:provenance`, then the current
item should include just one [`atom:link`](https://datatracker.ietf.org/doc/html/rfc4287#section-4.2.7).

If the item from which the current item was sourced _does_ contains an `iffy:provenance`, then the current
feed SHOULD include all items of that element, with the URL of the feed from which the item was sourced
PREPENDED.

This will ensure the most immediate source will be the first [`atom:link`](https://datatracker.ietf.org/doc/html/rfc4287#section-4.2.7) element. The origin &mdash; or at least
the source for which no further provenance is known &mdash; will be the last [`atom:link`](https://datatracker.ietf.org/doc/html/rfc4287#section-4.2.7) element.

Processors may expect a channel level [`atom:link`](https://datatracker.ietf.org/doc/html/rfc4287#section-4.2.7) element with `rel="self"` and `type="application/rss+xml"` to
use as the basis for provenance in source documents. See [RSS Best Practices](https://www.rssboard.org/rss-profile#namespace-elements-atom-link).

**Example** (from [here](https://www.interfluidity.com/unify-rss/all-blogs.rss)):
```xml
<?xml version='1.0' encoding='UTF-8'?>

<rss version="2.0" xmlns:iffy="http://tech.interfluidity.com/xml/iffy/" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>interfluidity, all blogs</title>
    <!-- Other channel elements -->
    <atom:link type="application/rss+xml" rel="self" href="https://www.interfluidity.com/unify-rss/all-blogs.rss"/>
    <item>
      <title>Industrial policy and ecosystems</title>
      <guid isPermalink="true">https://drafts.interfluidity.com/2024/05/11/industrial-policy-and-ecosystems/index.html</guid>
      <author>nospam@dev.null (Steve Randy Waldman)</author>
      <link>https://drafts.interfluidity.com/2024/05/11/industrial-policy-and-ecosystems/index.html</link>
      <!-- Other item elements -->
      <iffy:provenance>
        <atom:link type="application/rss+xml" rel="via" href="https://drafts.interfluidity.com/feed/index.rss"/>
      </iffy:provenance>
    </item>
  </channel>
</rss>
```

</div>

---

<a id="iffy-restriction"></a>**Element &mdash; `iffy:restriction`**

<div class="iffy-element-desc">

In general, represents an expressin of some kind of restriction over the application of its containing element.

**When a subelement of [`iffy:hint-announce`](#iffy-hint-announce)**

Please see [`iffy:hint-announce`](#iffy-hint-announce).

</div>

---

<a id="iffy-revision"></a>**Element &mdash; `iffy:revision`**

<div class="iffy-element-desc">

MUST contain a URL, URI, or [IRI](https://datatracker.ietf.org/doc/html/rfc3987)
of a either a fixed past revision or the current (potentially evolving) revision
of an item.

**Example**:
```xml
<iffy:revision>https://tech.interfluidity.com/xml/iffy/index-oldcommit-13de0232319ceab2f830591c318089d18cbec78d.html</iffy:revision>
```

See also [`iffy:update-history` example](#iffy-update-history).

</div>

---

<a id="iffy-synthetic"></a>**Element &mdash; `iffy:synthetic`**

<div class="iffy-element-desc">

This element is intended to mark channels or items that are in some sense "synthetic", rather than, um, hand-made?

Can optionally contain an [`iffy-type`](#iffy-type), and other type-specific subelements.

**When a subelement of `channel`**

If _all the items_ in a feed are automatically rather than human generated (however you want to define that),
`iffy:synthetic` can mark an entire channel as synthetic, bot-produced.

Applications that include `iffy:synthetic` as a direct child of channel SHOULD NOT also mark individual `item`s as `iffy:synthetic`,
unless there is some meaningful sense in which some items are _more_ synthetic than others. It serves no purpose to mark
every item of a feed `iffy:synthetic` when the channel is already so marked.

Known types:

* `ItemUpdateFeed` &mdash; A synthetic feed announcing updates of a particular logical item from another feed.

  Elements SHOULD also include an [`atom:link`](https://datatracker.ietf.org/doc/html/rfc4287#section-4.2.7) with `rel` attribute set to `related`, pointing to the same resource
  as the `link` element of the item whose updates are being announced.

**When a subelement of `item`**

Marks items as "synthetic", that is _more_ synthetic than other, unmarked items in the feed.

Exactly what that means is not defined, but it should be _relative to the other items in the feed_.
If every item in a feed is automatically generated &mdash; suppose a weather feed, announcing conditions on the hour &mdash;
then those items should NOT be marked `iffy:synthetic`, because they are the usual for the feed.
The `channel` as a whole might be marked `iffy:synthetic`.

When `iffy:synthetic` is a subelement of `item`, it is intended to _distinguish_ more automatic from less automatically
produced items. It serves no purpose if it is used to mark all items.

Known types:

* `UpdateAnnouncement` &mdash; A synethetic item marking an update of an older item in the feed
  (or that once would have been in the feed)

**Example &mdash; `channel > iffy:synthetic > iffy:type (ItemUpdateFeed)`**:
```xml
  <channel>
    <!-- other channel elements -->
    <iffy:synthetic>
      <iffy:type>ItemUpdateFeed</iffy:type>
      <atom:link rel="related" href="https://tech.interfluidity.com/xml/iffy/index.html"/>
    </iffy:synthetic>
  </channel>
```

**Example &mdash; `item > iffy:synthetic > iffy:type (UpdateAnnouncement)`**:
```xml
  <item>
    <!-- other item elements -->
    <iffy:synthetic>
      <iffy:type>UpdateAnnouncement</iffy:type>
    </iffy:synthetic>
  </item>
```


</div>

---

<a id="iffy-type"></a>**Element &mdash; `iffy:type`**

<div class="iffy-element-desc">

In general, marks the "type" of its containing element.

**When a subelement of `channel` > [`iffy:synthetic`](#iffy-synthetic)**

Marks what kind of synthetic channel its parent is. Currently known values include

* `ItemUpdateFeed` &mdash; A synthetic feed announcing updates of a particular logical
   item from another feed.

**When a subelement of `item` > [`iffy:synthetic`](#iffy-synthetic)**

Marks what kind of synthetic item its parent is. Currently known values include

* `UpdateAnnouncement` &mdash; A synethetic item marking an update of an older item in the feed
  (or that once would have been in the feed)

Please see known containing elements, including
* [`iffy:synthetic`](#iffy-synthetic).

</div>

---

<a id="iffy-update"></a>**Element &mdash; `iffy:update`**

<div class="iffy-element-desc">

**When a sub-element of [`iffy:update-history`](#iffy-update-history)**

MUST contain one [`atom:updated`](https://datatracker.ietf.org/doc/html/rfc4287#section-4.2.15) element.

MAY also contain one each of
* [`atom:summary`](https://datatracker.ietf.org/doc/html/rfc4287#section-4.2.13)
* [`iffy:diff`](#iffy-diff)
* [`iffy:revision`](#iffy-revision)

MAY, but usually will not, contain any number of
[`dc:creator`](https://www.rssboard.org/rss-profile#namespace-elements-dublin-creator)
elements, reflecting _authorship specific to this revision_. By default, an
update's authors are the same as the authorship of the containing item,
which always reflects the curren revisions authors.
If authorship is evolving over time, it SHOULD be specified for every update
except the most recent one.
Initial authorship may be specified in an [`iffy:initial`](#iffy-initial) element.

**_Typo fixes, small rephrasings, and other tweaks are not expected to be recorded as distinct updates.
That is, within a "single update" there may be a sequence of smaller revisions that go unrecorded._**
Applications that want a more forensic history might consider including and exposing every published
change in version control.

See [`iffy:update-history` example](#iffy-update-history).

</div>

---

<a id="iffy-update-history"></a>**Element &mdash; `iffy:update-history`**

<div class="iffy-element-desc">

**When an item level element**

SHOULD contain a sequence of [`iffy:update`](#iffy-update) elements, in reverse chronological order, describing
the histories of _major revisions_ to an item.

MAY contain one [`iffy:initial`](#iffy-initial) element.

Items containing an `iffy:update-history` SHOULD also include an [`atom:updated`](https://datatracker.ietf.org/doc/html/rfc4287#section-4.2.15)
tag corresponding to the most recent update.

**_Typo fixes, small rephrasings, and other minor tweaks are not expected to be recorded as distinct updates.
That is, within a "single update" there may be a sequence of smaller revisions that go unrecorded._**
Applications that want a more forensic history might consider including and exposing every published
change in version control.

<a id="iffy-update-history-example"></a>**Example**:
```xml
<item>
  <!-- Other item elements -->
  <iffy:update-history>
    <iffy:update>
      <atom:updated>2024-06-02T04:20:00Z</atom:updated>
      <atom:summary>
        <![CDATA[Drop <code>iffy:timestamp</code>. We can just reuse <code>atom:updated</code> for the same work.]]>
      </atom:summary>
      <iffy:revision>
        https://tech.interfluidity.com/xml/iffy/index-oldcommit-199e44561de3fd9e731a335d8b2a655f42d9bc04.html
      </iffy:revision>
      <iffy:diff>
        https://tech.interfluidity.com/xml/iffy/index-diff-199e44561de3fd9e731a335d8b2a655f42d9bc04-to-current.html
      </iffy:diff>
    </iffy:update>
    <iffy:update>
      <atom:updated>2024-06-02T01:35:00Z</atom:updated>
      <atom:summary><![CDATA[Add initial take on tags related to updates and revisions.]]></atom:summary>
      <iffy:revision>
        https://tech.interfluidity.com/xml/iffy/index-oldcommit-72eaf9fdfebc9e627bff33bbe1102d4d250ad1d0.html
      </iffy:revision>
      <iffy:diff>
        https://tech.interfluidity.com/xml/iffy/index-diff-72eaf9fdfebc9e627bff33bbe1102d4d250ad1d0-to-199e44561de3fd9e731a335d8b2a655f42d9bc04.html
      </iffy:diff>
    </iffy:update>
    <iffy:update>
      <atom:updated>2024-05-26T03:00:00Z</atom:updated>
      <atom:summary><![CDATA[Add JS/CSS so that prior revisions are visually distinct from current.]]></atom:summary>
      <iffy:revision>
        https://tech.interfluidity.com/xml/iffy/index-oldcommit-13de0232319ceab2f830591c318089d18cbec78d.html
      </iffy:revision>
      <iffy:diff>
        https://tech.interfluidity.com/xml/iffy/index-diff-13de0232319ceab2f830591c318089d18cbec78d-to-72eaf9fdfebc9e627bff33bbe1102d4d250ad1d0.html
      </iffy:diff>
    </iffy:update>
    <iffy:update>
      <atom:updated>2024-05-24T04:25:00Z</atom:updated>
      <atom:summary>
        <![CDATA[Drop tags <code>iffy:when-updated</code> and <code>iffy:original-guid</code>, bad appraoch to updates.]]>
      </atom:summary>
      <iffy:revision>
        https://tech.interfluidity.com/xml/iffy/index-oldcommit-394986cb8d9c57f567d324e691a44d50102101ce.html
      </iffy:revision>
      <iffy:diff>
        https://tech.interfluidity.com/xml/iffy/index-diff-394986cb8d9c57f567d324e691a44d50102101ce-to-13de0232319ceab2f830591c318089d18cbec78d.html
      </iffy:diff>
    </iffy:update>
  </iffy:update-history>
</item>
```

</div>
